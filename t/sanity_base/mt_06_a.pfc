/* <module>
%
%  PFC is a language extension for prolog.
%
%  It adds a new type of module inheritance
%
% Dec 13, 2035
% Douglas Miles
*/
%  was_module(mt_06a,[]).

:- include(test_header).


%:- add_import_module(mt_01,baseKB,end).

:- set_defaultAssertMt(myMt).

mtProlog(code1).
mtHybrid(kb2).
mtHybrid(kb3).

% code1: (a <- b).
code1: (a:- printAll('$current_source_module'(_M))).


kb2: (b).

genlMt(kb2,code1).

kb2: (?- a).

genlMt(kb3,kb2).

predicateConventionMt(a,kb2).
%predicateConventionMt(P,MT)==>{kb_shared(MT:P)}.

%==> (baseKB:predicateConventionMt(a,kb2)).

:- ain((kb3: (a==>c))).


% :- mpred_must(clause(kb2:a,_)).
